name: Redeploy on Specific Review Comment by Authorized User

on:
  issue_comment:
    types: [created]

jobs:
  check-comment-and-trigger-build:
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/rebuild')
    runs-on: ubuntu-22.04
    steps:
      - name: Trigger Build Job
        run: echo "Triggering Build Job"

  build:
    name: Build Docker Image - ${{ matrix.service }}
    needs: check-comment-and-trigger-build
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        service:
          - index
          - library
          - validation
          - dataproxy
          - nodecleaner
          - revalidatenode
          - schemaparser
          - dataproxyupdater
          - dataproxyrefresher
          - maintenance
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: DockerHub Login
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish Docker Image
        run: make docker-push-${{ matrix.service }} DEPLOY_ENV=pretest

  deploy:
    name: Deploy Services
    needs: build
    runs-on: ubuntu-22.04
    env:
      SERVER_IP: ${{ secrets.PRETEST_SERVER_IP }}
      KUBECONFIG_PATH: ${{ secrets.KUBECONFIG_PATH }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DEPLOY_ENV: pretest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Run Deployment Script
        run: ./scripts/deploy-services.sh

  e2e_test:
    name: E2E Test
    needs:
      - deploy
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Newman
        run: |
          npm install -g newman

      - name: Test Index
        run: >
          ./scripts/wait_for_timeout.sh
          https://pretest-index.murmurations.network/v2/ping 200 300

      - name: Test Library
        run: >
          ./scripts/wait_for_timeout.sh
          https://pretest-library.murmurations.network/v2/ping 200 300

      - name: Test Data Proxy
        run: >
          ./scripts/wait_for_timeout.sh
          https://pretest-data-proxy.murmurations.network/v1/ping 200 300

      - name: Newman E2E Test
        run: make newman-test DEPLOY_ENV=pretest
